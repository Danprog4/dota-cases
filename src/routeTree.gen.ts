/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TradeImport } from './routes/trade'
import { Route as ProfileImport } from './routes/profile'
import { Route as FriendsImport } from './routes/friends'
import { Route as CrystalsImport } from './routes/crystals'
import { Route as CasesImport } from './routes/cases'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TradeRoute = TradeImport.update({
  id: '/trade',
  path: '/trade',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const FriendsRoute = FriendsImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => rootRoute,
} as any)

const CrystalsRoute = CrystalsImport.update({
  id: '/crystals',
  path: '/crystals',
  getParentRoute: () => rootRoute,
} as any)

const CasesRoute = CasesImport.update({
  id: '/cases',
  path: '/cases',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cases': {
      id: '/cases'
      path: '/cases'
      fullPath: '/cases'
      preLoaderRoute: typeof CasesImport
      parentRoute: typeof rootRoute
    }
    '/crystals': {
      id: '/crystals'
      path: '/crystals'
      fullPath: '/crystals'
      preLoaderRoute: typeof CrystalsImport
      parentRoute: typeof rootRoute
    }
    '/friends': {
      id: '/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof FriendsImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/trade': {
      id: '/trade'
      path: '/trade'
      fullPath: '/trade'
      preLoaderRoute: typeof TradeImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cases': typeof CasesRoute
  '/crystals': typeof CrystalsRoute
  '/friends': typeof FriendsRoute
  '/profile': typeof ProfileRoute
  '/trade': typeof TradeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cases': typeof CasesRoute
  '/crystals': typeof CrystalsRoute
  '/friends': typeof FriendsRoute
  '/profile': typeof ProfileRoute
  '/trade': typeof TradeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cases': typeof CasesRoute
  '/crystals': typeof CrystalsRoute
  '/friends': typeof FriendsRoute
  '/profile': typeof ProfileRoute
  '/trade': typeof TradeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cases' | '/crystals' | '/friends' | '/profile' | '/trade'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cases' | '/crystals' | '/friends' | '/profile' | '/trade'
  id:
    | '__root__'
    | '/'
    | '/cases'
    | '/crystals'
    | '/friends'
    | '/profile'
    | '/trade'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CasesRoute: typeof CasesRoute
  CrystalsRoute: typeof CrystalsRoute
  FriendsRoute: typeof FriendsRoute
  ProfileRoute: typeof ProfileRoute
  TradeRoute: typeof TradeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CasesRoute: CasesRoute,
  CrystalsRoute: CrystalsRoute,
  FriendsRoute: FriendsRoute,
  ProfileRoute: ProfileRoute,
  TradeRoute: TradeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cases",
        "/crystals",
        "/friends",
        "/profile",
        "/trade"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cases": {
      "filePath": "cases.tsx"
    },
    "/crystals": {
      "filePath": "crystals.tsx"
    },
    "/friends": {
      "filePath": "friends.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/trade": {
      "filePath": "trade.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
